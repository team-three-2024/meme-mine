{"version":3,"sources":["components/CameraController.js","config.js","helpers/track.js","helpers/url.js","components/Canary.js","components/Lights.js","components/Credits.js","lib/GameOverScreen.js","components/HealthBar.js","components/Noise.js","helpers/clean.js","components/Obstacles.js","components/Path.js","lib/Game.js","lib/StartScreen.js","components/ProgressBar.js","lib/Flow.js","components/Videos.js","index.js"],"names":["CameraController","_ref","mode","_useThree","useThree","camera","set","perspCamera","THREE","useEffect","position","useFrame","updateProjectionMatrix","canaryConfig","objectUrl","hop","idle","walk","nodeCoords","nodeSigns","nodeScale","nodeGroupScale","meshColorIndex","meshScale","debug","model","material","scale","metalness","roughness","opacity","color","gridPosition","cameraPosition","pointColorIndex","primary","hovered","active","pointLight","intensity","distance","bloom","kernelSize","luminanceThreshold","luminanceSmoothing","glitch","delay","duration","strength","lights","front","left","right","brandPalette","ciano","magenta","white","black","playTrack","track","current","pause","currentTime","play","assetURL","path","concat","process","prefix","Canary","props","initialPosition","canJump","undefined","canMove","muted","_useState","useState","_useState2","Object","slicedToArray","setPosition","_useState3","_useState4","isJumping","setIsJumping","_useState5","_useState6","hasSwitchedTrack","setHasSwitchedTrack","audioTracks","jump","useRef","move","footstep1","footstep2","main","animation","speed","reversed","glb","_useGLTF","useGLTF","scene","nodes","materials","animations","animationRef","meshRef","handleCanaryRef","Audio","values","forEach","audioTrack","load","removeAttribute","rotation","x","Math","PI","clip","action","clipAction","timeScale","loop","stopAllAction","handleKeyDown","event","key","prevPosition","preventDefault","window","addEventListener","removeEventListener","_","delta","update","time","newY","max","useLayoutEffect","canary","traverse","obj","type","receiveShadow","castShadow","assign","wireframe","moughness","react_default","a","createElement","ref","object","Lights","config","groupL","groupR","lightL","lightR","lightF","state","t","clock","getElapsedTime","currentPosition","parseInt","random","sin","y","cos","z","useHelper","Fragment","Title","styled","h3","_templateObject","taggedTemplateLiteral","Credit","_templateObject2","OverlayContainer","div","_templateObject3","Credits","href","target","rel","GameOverScreen","score","handleKeyPress","location","reload","document","CameraController_CameraController","Lights_Lights","Canary_Canary","OrbitControls","minPolarAngle","maxPolarAngle","Html","fullscreen","GameOverScreen_OverlayContainer","GameOverScreen_Title","Subtitle","FinalScore","Credits_Credits","blinkAnimation","keyframes","GameOverScreen_templateObject","GameOverScreen_templateObject2","h2","GameOverScreen_templateObject3","h1","_templateObject4","_templateObject5","HealthBar","health","HealthBarContainer","Health","HealthBar_templateObject","HealthBar_templateObject2","Noise","React","forwardRef","size","noiseTexture","useLoader","positionX","positionY","positionZ","lookAt","args","width","height","map","transparent","cleanUp","objectsToRemove","push","remove","geometry","dispose","Obstacle","side","videos","handleObstacleRef","videoRef","textureRef","obstacleRef","video","floor","length","VideoTexture","isPlaying","needsUpdate","Obstacles","_ref2","canaryRef","setScore","hitPoints","setHitPoints","handleGameOver","obstacles","setObstacles","lastBonusToastId","setLastBonusToastId","lastDamageToastId","setLastDamageToastId","clockRef","elapsedTime","bonusRateRef","nearBonusDetected","collisionDetected","obstacleIdentifier","prevObstacles","obstacle","objectSpread","playerBox","Box3","setFromObject","bonusBox","center","getCenter","getSize","multiplyScalar","rotatedSize","scaledRotatedPlayerBox","setFromCenterAndSize","bonusCenter","bonusSize","bonusRotatedSize","scaledRotatedBonusBox","atLeastOneBonus","obstacleBox","intersectsBox","prevHitPoints","toast","dismiss","newToastId","error","icon","style","borderRadius","background","fontWeight","prevScore","success","min","filter","lastObstacle","lastPosition","obstacleGap","obstacleSide","newObstacle","id","Date","now","toConsumableArray","_ref3","Obstacles_Obstacle","SideSegment","PathSegment","Path","playerRef","segments","setSegments","gamePosition","setGamePosition","lastSegmentRef","prevSegments","segment","lastSegmentZ","newSegmentZ","slice","index","Game","setCanaryRef","isGameOver","setIsGameOver","_useState7","_useState8","isGlitching","setIsGlitching","_useState9","_useState10","setMode","_useState11","_useState12","glitchAudioTrack","initialDelay","timeoutId","setTimeout","glitchOut","prevMode","randomDelay","newMode","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Promise","all","faceapi","faceExpressionNet","loadFromUri","faceRecognitionNet","ssdMobilenetv1","tinyFaceDetector","mtcnn","faceLandmark68Net","faceLandmark68TinyNet","ageGenderNet","stop","apply","this","arguments","loadModels","isGlitchActive","gameRef","GameOverScreen_GameOverScreen","postprocessing_dist","dtSize","GlitchMode","SPORADIC","enableZoom","enableRotate","ScoreContainer","ScoreDisplay","HealthBar_HealthBar","Game_templateObject","Game_templateObject2","StartScreen","showStartScreen","setShowStartScreen","showSelectMode","setShowSelectedMode","videoWidth","captureVideo","setCaptureVideo","isTouchDevice","navigator","maxTouchPoints","handleTouch","handleGameMode","gameMode","mediaDevices","getUserMedia","then","stream","srcObject","catch","err","console","onPlay","setInterval","_callee2","detections","_context2","withFaceLandmarks","withFaceExpressions","sent","expressions","angry","dispatchEvent","KeyboardEvent","surprised","happy","role","aria-label","StartScreen_OverlayContainer","StartScreen_Title","StartScreen_Subtitle","ControllerOption","onClick","AnimatedSubtitle","Hint","Game_Game","StartScreen_templateObject","StartScreen_templateObject2","StartScreen_templateObject3","StartScreen_templateObject4","p","StartScreen_templateObject5","_templateObject6","_templateObject7","ProgressBar","progress","ProgressBarContainer","Progress","ProgressBar_templateObject","ProgressBar_templateObject2","Flow","_usePreloadedVideos","numberOfVideos","setVideos","loadingProgress","setLoadingProgress","cleanupFunctions","selectedFilenames","allFilenames","i","randomIndex","videoElements","filename","videoObj","src","videoElement","loaded","preload","playbackRate","setAttribute","onCanPlayThrough","loadedVideosCount","v","cleanup","usePreloadedVideos","Flow_OverlayContainer","Flow_Title","ProgressBar_ProgressBar","react","fallback","react_three_fiber_esm","shadows","dpr","fov","performance","StartScreen_StartScreen","Flow_templateObject","Flow_templateObject2","StyledApp","src_templateObject","App","dist","Flow_Flow","rootElement","getElementById","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.0baef870.chunk.js","sourcesContent":["import { useThree, useFrame } from '@react-three/fiber'\nimport { useEffect } from 'react'\nimport * as THREE from 'three'\n\nconst CameraController = ({ mode }) => {\n  const { camera, set } = useThree()\n  const perspCamera = new THREE.PerspectiveCamera(50, 16 / 9, 0.1, 1000)\n\n  useEffect(() => {\n    if (mode === 'over') {\n      perspCamera.position.set(3, 1, 0)\n      set({ camera: perspCamera })\n\n      return null\n    }\n\n    if (mode === '2D') {\n      perspCamera.position.set(-20, 0, 1)\n      set({ camera: perspCamera })\n    } else {\n      perspCamera.position.set(0, 0.8, -3)\n      set({ camera: perspCamera })\n    }\n  }, [mode])\n\n  useFrame(() => {\n    camera.updateProjectionMatrix()\n  })\n\n  return null\n}\n\nexport { CameraController }\n","const canaryConfig = {\n  objectUrl: {\n    hop: 'canary_hop.glb',\n    idle: 'canary_idle.glb',\n    walk: 'canary_walk.glb'\n  },\n  nodeCoords: 'canary.geometry.attributes.position',\n  nodeSigns: [1, -1, -1],\n  nodeScale: 2.5,\n  nodeGroupScale: 0.02,\n  meshColorIndex: 'ciano',\n  meshScale: 1,\n  debug: false,\n  model: {\n    material: 'Default_OBJ',\n    scale: 0.02,\n    metalness: 0.2,\n    roughness: 2,\n    opacity: 1,\n    color: 'white'\n  },\n  gridPosition: [0, -0.52, 0.28],\n  cameraPosition: [-20, 0, 0],\n  pointColorIndex: {\n    primary: 'ciano',\n    hovered: 'magenta',\n    active: 'magenta'\n  },\n  pointLight: {\n    position: [0, 0, 0],\n    intensity: [2, 2, 2],\n    distance: 15,\n    color: ['ciano', 'magenta', 'magenta']\n  },\n  bloom: {\n    kernelSize: 1,\n    luminanceThreshold: 0.1,\n    luminanceSmoothing: 0.05,\n    intensity: 0.1\n  },\n  glitch: {\n    delay: [20, 30],\n    duration: [0.3, 0.5],\n    strength: [0.1, 0.3]\n  },\n  lights: {\n    front: {\n      color: 'ciano'\n    },\n    left: {\n      color: 'white'\n    },\n    right: {\n      color: 'magenta'\n    }\n  }\n}\n\nconst brandPalette = {\n  ciano: '#01ffff',\n  magenta: '#e6007a',\n  white: '#ffffff',\n  black: '#000000'\n}\n\nexport { brandPalette, canaryConfig }\n","const playTrack = track => {\n  if (track.current) {\n    track.current.pause()\n    track.current.currentTime = 0\n    track.current.play()\n  }\n}\n\nexport { playTrack }\n","function assetURL(path) {\n  const publicUrl = process.env.PUBLIC_URL\n\n  const isDevelopment = process.env.NODE_ENV === 'development'\n  const isRoot = publicUrl === '/'\n\n  const assetPrefix = isDevelopment || isRoot ? '' : process.env.PUBLIC_URL\n\n  return `${assetPrefix}/assets/${path}`\n}\n\nfunction prefix(path) {\n  const publicUrl = process.env.PUBLIC_URL\n\n  const isDevelopment = process.env.NODE_ENV === 'development'\n  const isRoot = publicUrl === '/'\n\n  const assetPrefix = isDevelopment || isRoot ? '' : process.env.PUBLIC_URL\n\n  return `${assetPrefix}/${path}`\n}\n\nexport { assetURL, prefix }\n","import { useGLTF } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useState, useRef, useEffect, useLayoutEffect } from 'react'\nimport * as THREE from 'three'\nimport { brandPalette, canaryConfig } from '../config'\nimport { playTrack } from '../helpers/track'\nimport { assetURL } from '../helpers/url'\n\nconst Canary = props => {\n  const initialPosition = props.position ? props.position : [0, 0, 0]\n  const canJump = props.canJump !== undefined ? props.canJump : true\n  const canMove = props.canMove !== undefined ? props.canMove : true\n  const muted = props.muted !== undefined ? props.muted : false\n\n  const [position, setPosition] = useState(initialPosition)\n  const [isJumping, setIsJumping] = useState(false)\n  const [hasSwitchedTrack, setHasSwitchedTrack] = useState(false)\n\n  const audioTracks = {\n    jump: useRef(null),\n    move: useRef(null),\n    footstep1: useRef(null),\n    footstep2: useRef(null),\n    main: useRef(null)\n  }\n\n  let animation = props.animation\n  let speed = props.speed\n  let reversed = props.reversed\n\n  if (props.animation === 'dead') {\n    animation = 'idle'\n    speed = 0\n    reversed = true\n  }\n\n  const glb = canaryConfig.objectUrl[animation]\n  const { scene, nodes, materials, animations } = useGLTF(assetURL(glb))\n\n  const animationRef = useRef()\n  const meshRef = useRef()\n\n  useEffect(() => {\n    if (props.handleCanaryRef) {\n      props.handleCanaryRef(meshRef)\n    }\n  }, [meshRef])\n\n  useEffect(() => {\n    audioTracks.jump.current = new Audio(assetURL('audio/canary_jump.mp3'))\n    audioTracks.move.current = new Audio(assetURL('audio/canary_swooshleftandright.mp3'))\n    audioTracks.footstep1.current = new Audio(assetURL('audio/canary_footstep1.mp3'))\n    audioTracks.footstep2.current = new Audio(assetURL('audio/canary_footstep2.mp3'))\n    audioTracks.main.current = new Audio(assetURL('audio/canary_in_a_meme_mine.mp3'))\n\n    Object.values(audioTracks).forEach(audioTrack => {\n      if (audioTrack.current) {\n        audioTrack.current.load()\n      }\n    })\n    return () => {\n      Object.values(audioTracks).forEach(audioTrack => {\n        if (audioTrack.current) {\n          audioTrack.current.pause()\n          audioTrack.current.removeAttribute('src')\n          audioTrack.current.load()\n        }\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (meshRef.current && reversed) {\n      meshRef.current.rotation.x = Math.PI / 0.85\n    }\n  }, [])\n\n  useEffect(() => {\n    if (meshRef && meshRef.current) {\n      animationRef.current = new THREE.AnimationMixer(meshRef.current)\n    }\n  }, [animation, meshRef])\n\n  useEffect(() => {\n    if (animationRef.current && animations) {\n      animations.forEach(clip => {\n        const action = animationRef.current.clipAction(clip)\n        action.timeScale = speed\n        action.play()\n      })\n    }\n\n    // it means the game started\n    if (props.speed === 3) {\n      audioTracks.main.current.loop = true\n      playTrack(audioTracks.main)\n    }\n\n    return () => {\n      if (animationRef.current) {\n        animationRef.current.stopAllAction()\n        setHasSwitchedTrack(false)\n      }\n    }\n  }, [animations])\n\n  useEffect(() => {\n    if (muted) return\n\n    playTrack(audioTracks.move)\n  }, [muted, position[0]])\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (canMove) {\n        if (event.key === 'ArrowRight') {\n          setPosition(prevPosition => {\n            if (prevPosition[0] !== -1) return [prevPosition[0] - 1, prevPosition[1], prevPosition[2]]\n            else return prevPosition\n          })\n        } else if (event.key === 'ArrowLeft') {\n          setPosition(prevPosition => {\n            if (prevPosition[0] !== 1) return [prevPosition[0] + 1, prevPosition[1], prevPosition[2]]\n            else return prevPosition\n          })\n        }\n      }\n      if (canJump) {\n        if (event.key === 'ArrowUp' && !isJumping && position[1] === 0) {\n          setIsJumping(true)\n          playTrack(audioTracks.jump)\n        }\n      }\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [canMove, canJump, position])\n\n  useFrame((_, delta) => {\n    if (animationRef.current) {\n      animationRef.current.update(delta)\n\n      if (props.animation === 'walk' && props.speed === 1) {\n        animations.forEach(clip => {\n          const action = animationRef.current.clipAction(clip)\n          action.timeScale = speed\n\n          if (action.time > clip.duration / 2 && !hasSwitchedTrack) {\n            playTrack(audioTracks.footstep2)\n            setHasSwitchedTrack(true)\n          } else if (action.time < clip.duration / 2 && hasSwitchedTrack) {\n            playTrack(audioTracks.footstep1)\n            setHasSwitchedTrack(false)\n          }\n        })\n      }\n    }\n\n    if (isJumping) {\n      // Simple jump animation: move up then down\n      setPosition(prevPosition => {\n        const newY = prevPosition[1] + delta * 10\n        // Check if the model has reached the peak of the jump\n        if (newY >= 2.5) {\n          setIsJumping(false) // Start falling\n        }\n        return [prevPosition[0], newY <= 0 ? 0 : newY, prevPosition[2]] // Reset Y position after jump\n      })\n    } else {\n      // Bring the model back down if it's in the air\n      setPosition(prevPosition => {\n        if (prevPosition[1] !== 0) return [prevPosition[0], Math.max(0, prevPosition[1] - delta * 10), prevPosition[2]]\n        else return prevPosition\n      })\n    }\n  })\n\n  useLayoutEffect(() => {\n    if (props.meshScale) {\n      if (nodes.canary) {\n        nodes.canary.scale.set(4, 4, 4)\n      }\n    }\n\n    scene.traverse(obj => {\n      obj.type === 'Mesh' && (obj.receiveShadow = obj.castShadow = true)\n    })\n\n    Object.assign(materials[props.model.material], {\n      wireframe: false,\n      metalness: props.model.metalness,\n      roughness: props.model.moughness,\n      opacity: props.model.opacity,\n      color: new THREE.Color(brandPalette[props.model.color])\n    })\n  }, [scene, nodes, materials])\n\n  return (\n    <mesh position={position} ref={meshRef}>\n      <primitive object={scene} {...props} />\n    </mesh>\n  )\n}\n\nexport { Canary }\n","/* eslint-disable react/no-unknown-property */\n/* eslint-disable react/prop-types */\nimport { useHelper } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useRef } from 'react'\nimport * as THREE from 'three'\nimport { brandPalette } from '../config'\n\nconst Lights = ({ config }) => {\n  const groupL = useRef()\n  const groupR = useRef()\n  const front = useRef()\n  const lightL = useRef()\n  const lightR = useRef()\n  const lightF = useRef()\n\n  useFrame(state => {\n    const t = state.clock.getElapsedTime()\n\n    // storm effect\n    let currentPosition = 15\n    if (parseInt(t) % 4 === 1) {\n      currentPosition = (Math.random() * 15) | 0\n    }\n\n    groupL.current.position.x = (Math.sin(t) / 4) * currentPosition\n    groupL.current.position.y = (Math.cos(t) / 4) * currentPosition\n    groupL.current.position.z = (Math.cos(t) / 4) * currentPosition\n\n    groupR.current.position.x = (Math.cos(t) / 4) * 10\n    groupR.current.position.y = (Math.sin(t) / 4) * 10\n    groupR.current.position.z = (Math.sin(t) / 4) * 10\n\n    front.current.position.x = (Math.sin(t) / 4) * 10\n    front.current.position.y = (Math.cos(t) / 4) * 10\n    front.current.position.z = (Math.sin(t) / 4) * 10\n  })\n\n  if (config.debug === true) {\n    useHelper(lightL, THREE.PointLightHelper)\n    useHelper(lightR, THREE.PointLightHelper)\n    useHelper(lightF, THREE.PointLightHelper)\n  }\n\n  return (\n    <>\n      <group ref={groupL}>\n        <pointLight\n          ref={lightL}\n          color={brandPalette[config.pointLight.color[0]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[0]}\n        />\n      </group>\n      <group ref={groupR}>\n        <pointLight\n          ref={lightR}\n          color={brandPalette[config.pointLight.color[1]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[1]}\n        />\n      </group>\n      <group ref={front}>\n        <pointLight\n          ref={lightF}\n          color={brandPalette[config.pointLight.color[2]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[2]}\n        />\n      </group>\n    </>\n  )\n}\n\nexport { Lights }\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h3`\n  margin: 0;\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nconst Credit = styled.a`\n  font-size: 14px;\n  color: #fff;\n  margin: 0;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  text-decoration: none;\n\n  &:hover {\n    color: #e6007a;\n  }\n`\n\nconst OverlayContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: end;\n  padding: 50px;\n`\n\nconst Credits = () => (\n  <OverlayContainer>\n    <Title>powered by</Title>\n    <Credit href=\"https://anything.world/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      anything world\n    </Credit>\n    <Credit href=\"https://kusama.network/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      kusama network\n    </Credit>\n    <Credit href=\"https://github.com/justadudewhohacks/face-api.js\" target=\"_blank\" rel=\"noopener noreferrer\">\n      face api\n    </Credit>\n    <Credit href=\"https://giphy.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      giphy\n    </Credit>\n  </OverlayContainer>\n)\n\nexport { Credits }\n","import { Html, OrbitControls } from '@react-three/drei'\nimport React, { useEffect } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { CameraController } from '../components/CameraController'\nimport { Canary } from '../components/Canary'\nimport { Lights } from '../components/Lights'\nimport { canaryConfig as config } from '../config'\nimport { Credits } from '../components/Credits'\n\nconst GameOverScreen = ({ score }) => {\n  const mode = 'over'\n\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        window.location.reload()\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyPress)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress)\n    }\n  }, [])\n\n  return (\n    <>\n      <CameraController mode={mode} />\n\n      <Lights config={config} />\n\n      <Canary\n        animation=\"dead\"\n        canMove={false}\n        canJump={false}\n        position={[0, 0.2, 0]}\n        scale={config.model.scale}\n        meshColorIndex={config.meshColorIndex}\n        meshScale={config.meshScale}\n        model={config.model}\n      />\n\n      <OrbitControls minPolarAngle={Math.PI / 2.8} maxPolarAngle={Math.PI / 1.8} />\n\n      <Html fullscreen>\n        <OverlayContainer>\n          <Title>GAME OVER</Title>\n          <Subtitle>press enter to restart</Subtitle>\n          <FinalScore>final score: {score}</FinalScore>\n        </OverlayContainer>\n\n        <Credits />\n      </Html>\n    </>\n  )\n}\n\nconst blinkAnimation = keyframes`\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n`\n\nconst OverlayContainer = styled.div`\n  position: absolute;\n  top: 25px;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst FinalScore = styled.h2`\n  color: #fff;\n  margin-top: 10px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nconst Title = styled.h1`\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nconst Subtitle = styled.h2`\n  color: #fff;\n  margin-top: 125px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  animation: ${blinkAnimation} 1500ms linear infinite;\n`\n\nexport { GameOverScreen }\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HealthBar = ({ health }) => (\n  <HealthBarContainer>\n    <Health health={health} />\n  </HealthBarContainer>\n)\n\nconst HealthBarContainer = styled.div`\n  width: 25vw;\n  background-color: #ddd;\n  border: 2px solid #666;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst Health = styled.div`\n  height: 20px;\n  width: ${props => props.health}%;\n  background-color: ${props => (props.health < 50 ? 'red' : '#01ffff')};\n  transition: width 0.5s ease-in-out;\n`\n\nexport { HealthBar }\n","import { useFrame, useLoader, useThree } from '@react-three/fiber'\nimport React from 'react'\nimport * as THREE from 'three'\nimport { assetURL } from '../helpers/url'\n\nconst Noise = React.forwardRef(({ mode, opacity }, ref) => {\n  const { size, camera } = useThree()\n  const noiseTexture = useLoader(THREE.TextureLoader, assetURL('noise.png'))\n\n  useFrame(() => {\n    const positionX = mode === '2D' ? camera.position.x + 0.5 : camera.position.x\n    const positionY = camera.position.y\n    const positionZ = mode === '2D' ? camera.position.z : camera.position.z + 0.5\n\n    ref.current.position.set(positionX, positionY, positionZ)\n    ref.current.lookAt(camera.position)\n  })\n\n  return (\n    <mesh ref={ref}>\n      <planeBufferGeometry args={[size.width / 500, size.height / 500]} />\n      <meshBasicMaterial map={noiseTexture} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport { Noise }\n","function cleanUp(scene) {\n  const objectsToRemove = []\n\n  scene.traverse(object => {\n    if (object.position.z <= -50) {\n      objectsToRemove.push(object)\n    }\n  })\n\n  objectsToRemove.forEach(object => {\n    scene.remove(object)\n\n    if (object.geometry) {\n      object.geometry.dispose()\n    }\n    if (object.material) {\n      object.material.dispose()\n    }\n  })\n}\n\nexport { cleanUp }\n","import { useFrame, useThree } from '@react-three/fiber'\nimport React, { useEffect, useState, useRef } from 'react'\nimport toast from 'react-hot-toast'\nimport * as THREE from 'three'\nimport { Box3, VideoTexture } from 'three'\nimport { cleanUp } from '../helpers/clean'\n\nconst random = (min, max) => Math.floor(Math.random() * (max - min)) + min\n\nconst Obstacle = ({ mode, positionZ, side, videos, handleObstacleRef }) => {\n  const videoRef = useRef()\n  const textureRef = useRef()\n  const obstacleRef = useRef()\n  const video = videos[Math.floor(Math.random() * videos.length)]\n\n  useEffect(() => {\n    videoRef.current = video\n    textureRef.current = new VideoTexture(video)\n  }, [])\n\n  useFrame(() => {\n    if (!video.isPlaying) {\n      video.play()\n    }\n  })\n\n  useEffect(() => {\n    handleObstacleRef(positionZ, obstacleRef)\n  }, [positionZ])\n\n  useEffect(() => {\n    if (obstacleRef.current) {\n      if (mode === '2D') {\n        obstacleRef.current.rotation.y = Math.PI / 2\n      } else {\n        obstacleRef.current.rotation.y = 0\n      }\n    }\n  }, [mode])\n\n  useFrame(() => {\n    if (textureRef.current) {\n      textureRef.current.needsUpdate = true\n    }\n  })\n\n  return (\n    <mesh position={[side, 0, positionZ]} rotation={[0, 0, 0]} ref={obstacleRef}>\n      <circleGeometry args={[0.6, 32]} />\n      <meshBasicMaterial map={textureRef.current} side={THREE.DoubleSide} />\n    </mesh>\n  )\n}\n\nconst Obstacles = React.forwardRef(({ mode, videos, setScore, hitPoints, setHitPoints, handleGameOver }, canaryRef) => {\n  const [obstacles, setObstacles] = useState([])\n  const [lastBonusToastId, setLastBonusToastId] = useState(null)\n  const [lastDamageToastId, setLastDamageToastId] = useState(null)\n\n  const visibleObstacles = 5\n  const clockRef = useRef({ elapsedTime: 0, delta: 0 })\n\n  const bonusRateRef = useRef(2)\n  const nearBonusDetected = useRef(false)\n  const collisionDetected = useRef(false)\n\n  const handleObstacleRef = (obstacleIdentifier, ref) => {\n    setObstacles(prevObstacles => {\n      return prevObstacles.map(obstacle => {\n        if (obstacle.z === obstacleIdentifier) {\n          if (ref.current) {\n            return { ...obstacle, ref }\n          }\n        }\n        return obstacle\n      })\n    })\n  }\n\n  useFrame(state => {\n    const { clock } = state\n    clockRef.current.delta = clock.getElapsedTime() - clockRef.current.elapsedTime\n\n    if (canaryRef && canaryRef.current) {\n      const playerBox = new Box3().setFromObject(canaryRef.current)\n      const bonusBox = new Box3().setFromObject(canaryRef.current)\n\n      // Transform the original bounding box to match the model inside\n      const scaleFactor = 0.23\n      const center = new THREE.Vector3()\n      const size = new THREE.Vector3()\n      playerBox.getCenter(center)\n      playerBox.getSize(size)\n\n      // Scale the size\n      size.multiplyScalar(scaleFactor)\n      const rotatedSize = new THREE.Vector3(size.x, size.z, size.y)\n      const scaledRotatedPlayerBox = new THREE.Box3()\n      scaledRotatedPlayerBox.setFromCenterAndSize(center, rotatedSize)\n\n      // Near bonus box\n      const bonusScaleFator = 0.35\n      const bonusZScaleFator = 1.6\n      const bonusCenter = new THREE.Vector3()\n      const bonusSize = new THREE.Vector3()\n      bonusBox.getCenter(bonusCenter)\n      bonusBox.getSize(bonusSize)\n      bonusSize.multiplyScalar(bonusScaleFator)\n      bonusSize.y *= bonusZScaleFator // y because it's rotated, but it's in fact z\n      const bonusRotatedSize = new THREE.Vector3(bonusSize.x, bonusSize.z, bonusSize.y)\n      const scaledRotatedBonusBox = new THREE.Box3()\n      scaledRotatedBonusBox.setFromCenterAndSize(bonusCenter, bonusRotatedSize)\n\n      let atLeastOneBonus = false\n      obstacles.forEach(obstacle => {\n        if (obstacle.ref && obstacle.ref.current) {\n          const obstacleBox = new Box3().setFromObject(obstacle.ref.current)\n          if (scaledRotatedPlayerBox && obstacleBox) {\n            collisionDetected.current = scaledRotatedPlayerBox.intersectsBox(obstacleBox)\n          }\n          if (scaledRotatedBonusBox && obstacleBox) {\n            nearBonusDetected.current = scaledRotatedBonusBox.intersectsBox(obstacleBox)\n          }\n        }\n\n        if (collisionDetected.current) {\n          setHitPoints(prevHitPoints => prevHitPoints - 5)\n\n          if (lastDamageToastId) {\n            toast.dismiss(lastDamageToastId)\n          }\n          const newToastId = toast.error('DAMAGE TAKEN', {\n            duration: 2500,\n            icon: '💥',\n            position: 'bottom-center',\n            style: {\n              borderRadius: '10px',\n              background: 'transparent',\n              color: '#fff',\n              fontWeight: 'bold'\n            }\n          })\n          setLastDamageToastId(newToastId)\n\n          if (hitPoints < 1) {\n            handleGameOver(true)\n          }\n          return\n        }\n\n        if (nearBonusDetected.current) {\n          atLeastOneBonus = true\n\n          setScore(prevScore => prevScore + bonusRateRef.current)\n\n          if (bonusRateRef.current < 256) bonusRateRef.current *= 2\n\n          if (lastBonusToastId) {\n            toast.dismiss(lastBonusToastId)\n          }\n          const newToastId = toast.success(`BONUS +${bonusRateRef.current}`, {\n            duration: 2500,\n            icon: '⭐',\n            position: 'top-center',\n            style: {\n              borderRadius: '10px',\n              background: 'transparent',\n              color: '#fff',\n              fontWeight: 'bold'\n            }\n          })\n          setLastBonusToastId(newToastId)\n        }\n      })\n\n      if (!atLeastOneBonus) {\n        bonusRateRef.current = 2\n      }\n    }\n  })\n\n  const { scene } = useThree()\n\n  useFrame(state => {\n    const { clock } = state\n    clockRef.current.delta = clock.getElapsedTime() - clockRef.current.elapsedTime\n\n    if (canaryRef && canaryRef.current) {\n      // Move obstacles and clean up old ones\n      if (clockRef.current.delta >= 0.1) {\n        clockRef.current.elapsedTime = clock.getElapsedTime()\n        setObstacles(\n          prevObstacles =>\n            prevObstacles\n              .map(obstacle => ({\n                ...obstacle,\n                z: obstacle.z - 1\n              }))\n              .filter(obstacle => obstacle.z >= -10) // -10 is the screen limit\n        )\n        cleanUp(scene)\n      }\n\n      // Create new obstacles\n      if (obstacles.length < visibleObstacles) {\n        const lastObstacle = obstacles[obstacles.length - 1]\n        const lastPosition = lastObstacle ? lastObstacle.z : 0\n        const obstacleGap = random(10, 20)\n        const obstacleSide = Math.floor(Math.random() * 3) - 1\n\n        const newObstacle = {\n          id: Date.now() + Math.random(),\n          z: lastPosition + obstacleGap,\n          side: obstacleSide,\n          ref: null\n        }\n\n        setObstacles(prevObstacles => [...prevObstacles, newObstacle])\n      }\n    }\n  })\n\n  return (\n    <>\n      {obstacles.map(({ id, z, side }) => {\n        return (\n          <Obstacle\n            key={id}\n            mode={mode}\n            positionZ={z}\n            side={side}\n            videos={videos}\n            handleObstacleRef={handleObstacleRef}\n          />\n        )\n      })}\n    </>\n  )\n})\n\nexport { Obstacles }\n","import { useFrame, useThree } from '@react-three/fiber'\nimport React, { useState, useRef } from 'react'\nimport * as THREE from 'three'\nimport { cleanUp } from '../helpers/clean'\n\nconst SideSegment = React.forwardRef(({ positionZ, side }, ref) => {\n  const positionX = side === 'left' ? -1.5 : 1.5\n\n  return (\n    <mesh position={[positionX, 0, positionZ]} rotation={[Math.PI / 2, 0, 0]} ref={ref}>\n      <planeGeometry args={[0.1, 1000]} />\n      <meshBasicMaterial color={0xffffff} side={THREE.DoubleSide} />\n    </mesh>\n  )\n})\n\nconst PathSegment = React.forwardRef(({ positionZ }, ref) => {\n  return (\n    <mesh position={[0, -0.52, positionZ]} rotation={[Math.PI / 2, 0, 0]} ref={ref}>\n      <planeGeometry args={[0.1, 5]} />\n      <meshBasicMaterial color={0xffffff} side={THREE.DoubleSide} />\n    </mesh>\n  )\n})\n\nconst Path = React.forwardRef((_, playerRef) => {\n  const [segments, setSegments] = useState([])\n  const [gamePosition, setGamePosition] = useState(0)\n\n  const visibleSegments = 5\n  const lastSegmentRef = useRef()\n  const clockRef = useRef({ elapsedTime: 0, delta: 0 })\n\n  const { scene } = useThree()\n\n  useFrame(state => {\n    const { clock } = state\n    clockRef.current.delta = clock.getElapsedTime() - clockRef.current.elapsedTime\n\n    if (playerRef && playerRef.current) {\n      if (clockRef.current.delta >= 0.05) {\n        clockRef.current.elapsedTime = clock.getElapsedTime()\n        setGamePosition(gamePosition => gamePosition + 1)\n        setSegments(prevSegments => prevSegments.map(segment => segment - 1))\n      }\n\n      const lastSegmentZ = lastSegmentRef.current ? lastSegmentRef.current.position.z : 0\n\n      // Generate new segments if needed\n      if (segments.length < visibleSegments || gamePosition % visibleSegments > lastSegmentZ) {\n        const segmentGap = 20\n        const newSegmentZ = lastSegmentZ + segmentGap\n        setSegments(prevSegments => [...prevSegments, newSegmentZ])\n      }\n\n      // Remove segments that are far behind the player\n      if (segments.length > visibleSegments) {\n        setSegments(prevSegments => prevSegments.slice(1))\n        cleanUp(scene)\n      }\n    }\n  })\n\n  return (\n    <>\n      {segments.map((z, index) => (\n        <React.Fragment key={index}>\n          <PathSegment positionZ={z} ref={index === segments.length - 1 ? lastSegmentRef : undefined} />\n          <SideSegment positionZ={z} side=\"left\" />\n          <SideSegment positionZ={z} side=\"right\" />\n        </React.Fragment>\n      ))}\n    </>\n  )\n})\n\nexport { Path }\n","import { Html, OrbitControls } from '@react-three/drei'\nimport { EffectComposer, Glitch } from '@react-three/postprocessing'\nimport * as faceapi from 'face-api.js'\nimport { GlitchMode } from 'postprocessing'\nimport React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { GameOverScreen } from './GameOverScreen'\nimport { CameraController } from '../components/CameraController'\nimport { Canary } from '../components/Canary'\nimport { HealthBar } from '../components/HealthBar'\nimport { Lights } from '../components/Lights'\nimport { Noise } from '../components/Noise'\nimport { Obstacles } from '../components/Obstacles'\nimport { Path } from '../components/Path'\nimport { canaryConfig as config } from '../config'\nimport { playTrack } from '../helpers/track'\nimport { assetURL, prefix } from '../helpers/url'\n\nconst Game = ({ videos }) => {\n  const [canaryRef, setCanaryRef] = useState(null)\n  const [isGameOver, setIsGameOver] = useState(false)\n  const [score, setScore] = useState(0)\n  const [isGlitching, setIsGlitching] = useState(false)\n  const [mode, setMode] = useState('3D')\n  const [hitPoints, setHitPoints] = useState(100)\n\n  const handleCanaryRef = ref => {\n    if (ref.current) {\n      setCanaryRef(ref)\n    }\n  }\n\n  const handleGameOver = isGameOver => setIsGameOver(isGameOver)\n\n  useEffect(() => {\n    glitchAudioTrack.current = new Audio(assetURL('audio/glitch.mp3'))\n\n    const glitchOut = () => {\n      setIsGlitching(true)\n      playTrack(glitchAudioTrack)\n\n      setTimeout(() => {\n        setMode(prevMode => {\n          const newMode = prevMode === '2D' ? '3D' : '2D'\n\n          let randomDelay\n          if (newMode === '3D') {\n            randomDelay = 20000 + Math.random() * 10000\n          } else {\n            randomDelay = 2000 + Math.random() * 3000\n          }\n\n          setTimeout(glitchOut, randomDelay)\n\n          return newMode\n        })\n      }, 800)\n\n      setTimeout(() => {\n        setIsGlitching(false)\n      }, 1000)\n    }\n\n    const initialDelay = 20000 + Math.random() * 10000\n    const timeoutId = setTimeout(glitchOut, initialDelay)\n\n    return () => clearTimeout(timeoutId)\n  }, [])\n\n  useEffect(() => {\n    if (isGameOver) {\n      var id = window.setTimeout(function() {}, 0)\n\n      while (id--) {\n        window.clearTimeout(id)\n      }\n    }\n  }, [isGameOver])\n\n  useEffect(() => {\n    const loadModels = async () => {\n      Promise.all([\n        faceapi.nets.faceExpressionNet.loadFromUri(prefix('/models')),\n        faceapi.nets.faceRecognitionNet.loadFromUri(prefix('/models')),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(prefix('/models')),\n        faceapi.nets.tinyFaceDetector.loadFromUri(prefix('/models')),\n        faceapi.nets.mtcnn.loadFromUri(prefix('/models')),\n        faceapi.nets.faceLandmark68Net.loadFromUri(prefix('/models')),\n        faceapi.nets.faceLandmark68TinyNet.loadFromUri(prefix('/models')),\n        faceapi.nets.ageGenderNet.loadFromUri(prefix('/models'))\n      ])\n    }\n    loadModels()\n  }, [])\n\n  const glitchAudioTrack = useRef(null)\n\n  let opacity = 0\n  let isGlitchActive = false\n\n  if (isGlitching) {\n    opacity = 0.5\n    isGlitchActive = true\n  }\n\n  const gameRef = useRef()\n\n  return isGameOver ? (\n    <GameOverScreen score={score} />\n  ) : (\n    <>\n      <CameraController mode={mode} />\n\n      <Lights config={config} />\n\n      <Path ref={canaryRef} />\n\n      <Obstacles\n        mode={mode}\n        videos={videos}\n        hitPoints={hitPoints}\n        setHitPoints={setHitPoints}\n        setScore={setScore}\n        handleGameOver={handleGameOver}\n        ref={canaryRef}\n      />\n\n      <Canary\n        animation=\"walk\"\n        speed={3}\n        scale={config.model.scale}\n        meshColorIndex={config.meshColorIndex}\n        meshScale={config.meshScale}\n        model={config.model}\n        handleCanaryRef={handleCanaryRef}\n      />\n\n      <Noise mode={mode} opacity={opacity} ref={gameRef} />\n\n      <EffectComposer>\n        <Glitch\n          dtSize={128}\n          mode={GlitchMode.SPORADIC}\n          delay={[0, 0]}\n          duration={[1000, 1000]}\n          active={isGlitchActive}\n        />\n      </EffectComposer>\n\n      <OrbitControls\n        minPolarAngle={Math.PI / 2.8}\n        maxPolarAngle={Math.PI / 1.8}\n        enableZoom={false}\n        enableRotate={false}\n      />\n\n      <Html fullscreen>\n        <ScoreContainer>\n          <ScoreDisplay>score: {score}</ScoreDisplay>\n          <HealthBar health={hitPoints} />\n        </ScoreContainer>\n      </Html>\n    </>\n  )\n}\n\nconst ScoreContainer = styled.div`\n  position: absolute;\n  top: 200px;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ScoreDisplay = styled.h1`\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nexport { Game }\n","import { Html, OrbitControls } from '@react-three/drei'\nimport * as faceapi from 'face-api.js'\nimport React, { useState, useEffect, useRef } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Game } from './Game'\nimport { Canary } from '../components/Canary'\nimport { Credits } from '../components/Credits'\nimport { Lights } from '../components/Lights'\nimport { canaryConfig as config } from '../config'\nimport { prefix } from '../helpers/url'\n\nconst StartScreen = ({ videos }) => {\n  const [showStartScreen, setShowStartScreen] = useState(true)\n  const [showSelectMode, setShowSelectedMode] = useState(true)\n  const videoRef = useRef()\n  const videoWidth = 320\n  const videoHeight = 240\n  const [captureVideo, setCaptureVideo] = useState(false)\n\n  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0\n\n  useEffect(() => {\n    if (showSelectMode) {\n      return\n    }\n\n    const handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        setShowStartScreen(false)\n      }\n    }\n\n    const handleTouch = event => {\n      if (event.type === 'touchstart') {\n        setShowStartScreen(false)\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyPress)\n\n    if (isTouchDevice) {\n      document.addEventListener('touchstart', handleTouch)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress)\n      if (isTouchDevice) {\n        document.addEventListener('touchstart', handleTouch)\n      }\n    }\n  }, [showSelectMode, setShowSelectedMode])\n\n  useEffect(() => {\n    const loadModels = async () => {\n      Promise.all([\n        faceapi.nets.faceExpressionNet.loadFromUri(prefix('/models')),\n        faceapi.nets.faceRecognitionNet.loadFromUri(prefix('/models')),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(prefix('/models')),\n        faceapi.nets.tinyFaceDetector.loadFromUri(prefix('/models')),\n        faceapi.nets.mtcnn.loadFromUri(prefix('/models')),\n        faceapi.nets.faceLandmark68Net.loadFromUri(prefix('/models')),\n        faceapi.nets.faceLandmark68TinyNet.loadFromUri(prefix('/models')),\n        faceapi.nets.ageGenderNet.loadFromUri(prefix('/models'))\n      ])\n    }\n    loadModels()\n  }, [])\n\n  const handleGameMode = gameMode => {\n    if (gameMode === 'webcam') {\n      startVideo()\n    }\n    setShowSelectedMode(false)\n  }\n\n  function startVideo() {\n    setCaptureVideo(true)\n\n    navigator.mediaDevices\n      .getUserMedia({ video: { width: videoWidth } })\n      .then(stream => {\n        if (videoRef.current) {\n          let video = videoRef.current\n          video.srcObject = stream\n          video.play()\n        }\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  function handleVideoOnPlay() {\n    setInterval(async () => {\n      if (videoRef) {\n        const detections = await faceapi\n          .detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\n          .withFaceLandmarks()\n          .withFaceExpressions()\n        if (detections) {\n          if (detections.expressions.angry > 0.5) {\n            window.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowLeft' }))\n          }\n\n          if (detections.expressions.surprised > 0.5) {\n            window.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowRight' }))\n          }\n\n          if (detections.expressions.happy > 0.6) {\n            window.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowUp' }))\n          }\n        }\n      }\n    }, 100)\n  }\n\n  return (\n    <>\n      {captureVideo && (\n        <Html fullscreen>\n          <div id=\"webcam_holder\">\n            <video id=\"webcam\" ref={videoRef} height={videoHeight} width={videoWidth} onPlay={handleVideoOnPlay} />\n            <p>\n              <span role=\"img\" aria-label=\"angry face\">\n                😬😠 (angry) to move left\n              </span>\n              <br />\n              <span role=\"img\" aria-label=\"surprised face\">\n                😲 (surprised) to move right\n              </span>\n              <br />\n              <span role=\"img\" aria-label=\"happy face\">\n                😆 (happy) to jump!\n              </span>\n            </p>\n          </div>\n        </Html>\n      )}\n\n      {showStartScreen ? (\n        <>\n          <Lights config={config} />\n\n          <Canary\n            animation={showSelectMode ? 'idle' : 'walk'}\n            speed={1}\n            position={[0, 0.2, 0]}\n            scale={config.model.scale}\n            meshColorIndex={config.meshColorIndex}\n            meshScale={config.meshScale}\n            model={config.model}\n            muted={showSelectMode ? true : false}\n          />\n\n          <OrbitControls minPolarAngle={Math.PI / 2.8} maxPolarAngle={Math.PI / 1.8} />\n\n          <Html fullscreen>\n            {showSelectMode ? (\n              <OverlayContainer>\n                <Title>canary in a meme mine</Title>\n                <Subtitle>select game mode:</Subtitle>\n                <ControllerOption onClick={() => handleGameMode('keyboard')}>\n                  <span role=\"img\" aria-label=\"keyboard\">\n                    ⌨️ keyboard\n                  </span>\n                </ControllerOption>\n                <ControllerOption onClick={() => handleGameMode('webcam')}>\n                  <span role=\"img\" aria-label=\"webcam\">\n                    📷 webcam\n                  </span>\n                </ControllerOption>\n              </OverlayContainer>\n            ) : (\n              <OverlayContainer>\n                <Title>canary in a meme mine</Title>\n                <AnimatedSubtitle>get ready and press enter to start</AnimatedSubtitle>\n                <fieldset>\n                  <legend style={{ color: '#e6007a' }}>hint</legend>\n                  <Hint>the only way to score is by nearly avoiding collision with memes</Hint>\n                  <Hint>but be careful, you will lose health if you hit the memes</Hint>\n                  <Hint style={{ color: '#e6007a' }}>the closer you get, the more points you earn!</Hint>\n                </fieldset>\n              </OverlayContainer>\n            )}\n\n            <Credits />\n          </Html>\n        </>\n      ) : (\n        <Game videos={videos} />\n      )}\n    </>\n  )\n}\n\nconst blinkAnimation = keyframes`\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n`\n\nconst OverlayContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  margin: 0;\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nconst Subtitle = styled.h2`\n  color: #fff;\n  margin-top: 300px;\n  margin-bottom: 5px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\nconst Hint = styled.p`\n  color: #fff;\n  margin: 1px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  text-align: center;\n`\n\nconst AnimatedSubtitle = styled.h2`\n  color: #fff;\n  margin-top: 300px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  animation: ${blinkAnimation} 1500ms linear infinite;\n`\nconst ControllerOption = styled.h2`\n  margin: 5px;\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  cursor: pointer;\n\n  &:hover {\n    color: #e6007a;\n  }\n`\n\nexport { StartScreen }\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ProgressBar = ({ progress }) => (\n  <ProgressBarContainer>\n    <Progress progress={progress} />\n  </ProgressBarContainer>\n)\n\nconst ProgressBarContainer = styled.div`\n  width: 25vw;\n  background-color: #ddd;\n  border: 2px solid #666;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst Progress = styled.div`\n  height: 20px;\n  width: ${props => props.progress}%;\n  background-color: #e6007a;\n  transition: width 0.5s ease-in-out;\n`\n\nexport { ProgressBar }\n","import { Canvas } from '@react-three/fiber'\nimport React, { Suspense } from 'react'\nimport styled from 'styled-components'\nimport { StartScreen } from './StartScreen'\nimport { ProgressBar } from '../components/ProgressBar'\nimport { usePreloadedVideos } from '../components/Videos'\n\nconst Flow = () => {\n  const numberOfVideos = 32\n  const { videos, loadingProgress } = usePreloadedVideos(numberOfVideos)\n\n  if (videos.length < numberOfVideos) {\n    return (\n      <OverlayContainer>\n        <Title>loading...</Title>\n        <ProgressBar progress={loadingProgress} />\n      </OverlayContainer>\n    )\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <Canvas shadows dpr={[1, 2]} camera={{ position: [3, 1, 3], fov: 50 }} performance={{ min: 0.1 }}>\n        <StartScreen videos={videos} />\n      </Canvas>\n    </Suspense>\n  )\n}\n\nconst OverlayContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  margin: 0;\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nexport { Flow }\n","import { useEffect, useState } from 'react'\nimport { assetURL } from '../helpers/url'\n\nfunction usePreloadedVideos(numberOfVideos) {\n  const [videos, setVideos] = useState([])\n  const [loadingProgress, setLoadingProgress] = useState(0)\n\n  useEffect(() => {\n    const cleanupFunctions = []\n    const selectedFilenames = []\n    const allFilenames = [\n      'monkey.mp4',\n      'good_job.mp4',\n      'wooow.mp4',\n      'really_girl.mp4',\n      'ooohh.mp4',\n      'cook.mp4',\n      'black_white_hihi.mp4',\n      'happy_face.mp4',\n      'marmot.mp4',\n      'nope.mp4',\n      'congrats.mp4',\n      'cat2.mp4',\n      'hiding_in_bush.mp4',\n      'blink_of_surprise.mp4',\n      'cat3.mp4',\n      'candy_cotton_girl.mp4',\n      'cat1.mp4',\n      'be_smart.mp4',\n      'hard_math.mp4',\n      'hurray_guy.mp4',\n      'gamer.mp4',\n      'disappointment.mp4',\n      'spongebob.mp4',\n      'omg_office.mp4',\n      'minion.mp4',\n      'how_to_play.mp4',\n      'trick_smile_girl.mp4',\n      'we_all_die.mp4',\n      'fire.mp4',\n      'confetti.mp4',\n      'high_five.mp4',\n      'girl_with_brush.mp4'\n    ]\n\n    for (let i = 0; i < numberOfVideos; i++) {\n      const randomIndex = Math.floor(Math.random() * allFilenames.length)\n      selectedFilenames.push(allFilenames[randomIndex])\n    }\n\n    const videoElements = selectedFilenames.map(filename => {\n      const videoObj = {\n        src: assetURL(`memes/${filename}`),\n        videoElement: document.createElement('video'),\n        loaded: false\n      }\n\n      const { videoElement } = videoObj\n      videoElement.src = videoObj.src\n      videoElement.preload = 'auto'\n      videoElement.muted = true\n      videoElement.loop = true\n      videoElement.playbackRate = 1.0\n      videoElement.setAttribute('playsinline', '')\n\n      const onCanPlayThrough = () => {\n        videoObj.loaded = true\n        const loadedVideosCount = videoElements.filter(v => v.loaded).length\n        setLoadingProgress((loadedVideosCount / numberOfVideos) * 100)\n\n        if (loadedVideosCount === numberOfVideos) {\n          setVideos(videoElements.map(v => v.videoElement))\n        }\n      }\n\n      videoElement.addEventListener('canplaythrough', onCanPlayThrough)\n      videoElement.load()\n\n      cleanupFunctions.push(() => videoElement.removeEventListener('canplaythrough', onCanPlayThrough))\n\n      return videoObj\n    })\n\n    return () => {\n      cleanupFunctions.forEach(cleanup => cleanup())\n    }\n  }, [numberOfVideos])\n\n  return { videos, loadingProgress }\n}\n\nexport { usePreloadedVideos }\n","import React, { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { Toaster } from 'react-hot-toast'\nimport styled from 'styled-components'\nimport { Flow } from './lib/Flow'\n\nimport './styles.css'\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n`\n\nconst App = () => {\n  return (\n    <StyledApp>\n      <Toaster />\n      <Flow />\n    </StyledApp>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nconst root = createRoot(rootElement)\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n)\n"],"sourceRoot":""}