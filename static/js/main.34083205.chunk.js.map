{"version":3,"sources":["components/CameraController.js","config.js","components/Canary.js","components/Lights.js","components/Obstacle.js","components/Path.js","lib/Game.js","lib/StartScreen.js","index.js"],"names":["CameraController","_useThree","useThree","camera","set","_useState","useState","_useState2","Object","slicedToArray","is2D","setIs2D","perspCamera","THREE","useEffect","toggleCamera","event","code","window","addEventListener","removeEventListener","position","lookAt","useFrame","updateProjectionMatrix","canaryConfig","objectUrl","hop","concat","process","idle","walk","nodeCoords","nodeSigns","nodeScale","nodeGroupScale","meshColorIndex","meshScale","debug","model","material","scale","metalness","roughness","opacity","color","gridPosition","cameraPosition","pointColorIndex","primary","hovered","active","pointLight","intensity","distance","bloom","kernelSize","luminanceThreshold","luminanceSmoothing","glitch","delay","duration","strength","lights","front","left","right","brandPalette","ciano","magenta","white","black","Canary","React","forwardRef","props","ref","initialPosition","setPosition","_useState3","_useState4","isJumping","setIsJumping","glb","animation","_useGLTF","useGLTF","scene","nodes","materials","animations","mixerRef","useRef","current","forEach","clip","action","clipAction","timeScale","speed","play","stopAllAction","handleKeyDown","key","prevPosition","_","delta","update","newY","Math","max","useLayoutEffect","canary","traverse","obj","type","receiveShadow","castShadow","assign","wireframe","moughness","react_default","a","createElement","object","Lights","_ref","config","groupL","groupR","lightL","lightR","lightF","state","t","clock","getElapsedTime","currentPosition","parseInt","random","x","sin","y","cos","z","useHelper","Fragment","ObstacleSegment","positionZ","side","texture","useLoader","TextureLoader","rotation","args","map","Obstacle","playerRef","obstacles","setObstacles","gamePosition","setGamePosition","lastSegmentRef","clockRef","elapsedTime","min","prevObstacles","segment","lastSegmentZ","length","newSegmentZ","floor","toConsumableArray","slice","_ref2","index","undefined","PathSegment","PI","Path","segments","setSegments","prevSegments","Game","react_three_fiber_esm","shadows","dpr","fov","performance","Lights_Lights","react","fallback","dist","multisampling","OrbitControls","minPolarAngle","maxPolarAngle","StartScreen","showStartScreen","setShowStartScreen","handleKeyPress","document","ReactDOM","createPortal","OverlayContainer","Title","Subtitle","body","Game_Game","blinkAnimation","keyframes","_templateObject","taggedTemplateLiteral","styled","div","_templateObject2","h1","_templateObject3","h2","_templateObject4","App","className","style","display","flexDirection","alignItems","height","StartScreen_StartScreen","Component","rootElement","getElementById","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.34083205.chunk.js","sourcesContent":["import { useThree, useFrame } from '@react-three/fiber'\nimport { useState, useEffect } from 'react'\nimport * as THREE from 'three'\n\nfunction CameraController() {\n  const { camera, set } = useThree()\n  const [is2D, setIs2D] = useState(false)\n  const perspCamera = new THREE.PerspectiveCamera(50, 16 / 9, 0.1, 1000)\n\n  useEffect(() => {\n    const toggleCamera = event => {\n      if (event.code === 'Space') {\n        setIs2D(!is2D)\n      }\n    }\n\n    window.addEventListener('keydown', toggleCamera)\n\n    return () => {\n      window.removeEventListener('keydown', toggleCamera)\n    }\n  }, [is2D])\n\n  useEffect(() => {\n    if (is2D) {\n      perspCamera.position.set(-20, 0, 0)\n      perspCamera.lookAt(20, 0, 0)\n      set({ camera: perspCamera })\n    } else {\n      perspCamera.position.set(0, 0.8, -3)\n      perspCamera.lookAt(0, 0, 0)\n      set({ camera: perspCamera })\n    }\n  }, [is2D])\n\n  useFrame(() => {\n    camera.lookAt(-100, 200, 500)\n    camera.updateProjectionMatrix()\n  })\n\n  return null\n}\n\nexport { CameraController }\n","const canaryConfig = {\n  objectUrl: {\n    hop: `${process.env.PUBLIC_URL}/assets/canary_hop.glb`,\n    idle: `${process.env.PUBLIC_URL}/assets/canary_idle.glb`,\n    walk: `${process.env.PUBLIC_URL}/assets/canary_walk.glb`\n  },\n  nodeCoords: 'canary.geometry.attributes.position',\n  nodeSigns: [1, -1, -1],\n  nodeScale: 2.5,\n  nodeGroupScale: 0.02,\n  meshColorIndex: 'ciano',\n  meshScale: 1,\n  debug: false,\n  model: {\n    material: 'Default_OBJ',\n    scale: 0.02,\n    metalness: 0.2,\n    roughness: 2,\n    opacity: 1,\n    color: 'white'\n  },\n  gridPosition: [0, -0.52, 0.28],\n  cameraPosition: [-20, 0, 0],\n  pointColorIndex: {\n    primary: 'ciano',\n    hovered: 'magenta',\n    active: 'magenta'\n  },\n  pointLight: {\n    position: [0, 0, 0],\n    intensity: [2, 2, 2],\n    distance: 15,\n    color: ['ciano', 'magenta', 'magenta']\n  },\n  bloom: {\n    kernelSize: 1,\n    luminanceThreshold: 0.1,\n    luminanceSmoothing: 0.05,\n    intensity: 0.1\n  },\n  glitch: {\n    delay: [20, 30],\n    duration: [0.3, 0.5],\n    strength: [0.1, 0.3]\n  },\n  lights: {\n    front: {\n      color: 'ciano'\n    },\n    left: {\n      color: 'white'\n    },\n    right: {\n      color: 'magenta'\n    }\n  }\n}\n\nconst brandPalette = {\n  ciano: '#01ffff',\n  magenta: '#e6007a',\n  white: '#ffffff',\n  black: '#000000'\n}\n\nexport { brandPalette, canaryConfig }\n","import { useGLTF } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useState, useRef, useEffect, useLayoutEffect } from 'react'\nimport * as THREE from 'three'\nimport { brandPalette, canaryConfig } from '../config'\n\nconst Canary = React.forwardRef((props, ref) => {\n  const initialPosition = props.position ? props.position : [0, 0, 0]\n  const [position, setPosition] = useState(initialPosition)\n  const [isJumping, setIsJumping] = useState(false)\n\n  const glb = canaryConfig.objectUrl[props.animation]\n  const { scene, nodes, materials, animations } = useGLTF(glb)\n\n  const mixerRef = useRef()\n\n  useEffect(() => {\n    if (ref.current) {\n      mixerRef.current = new THREE.AnimationMixer(ref.current)\n    }\n  }, [ref])\n\n  useEffect(() => {\n    if (mixerRef.current && animations) {\n      animations.forEach(clip => {\n        const action = mixerRef.current.clipAction(clip)\n        action.timeScale = props.speed\n        action.play()\n      })\n    }\n\n    return () => {\n      if (mixerRef.current) {\n        mixerRef.current.stopAllAction()\n      }\n    }\n  }, [animations])\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'ArrowRight') {\n        setPosition(prevPosition => [prevPosition[0] - 1, prevPosition[1], prevPosition[2]])\n      } else if (event.key === 'ArrowLeft') {\n        setPosition(prevPosition => [prevPosition[0] + 1, prevPosition[1], prevPosition[2]])\n      }\n      if (event.key === 'ArrowUp' && !isJumping && position[1] === 0) {\n        setIsJumping(true)\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [position])\n\n  useFrame((_, delta) => {\n    if (mixerRef.current) {\n      mixerRef.current.update(delta)\n    }\n\n    if (isJumping) {\n      // Simple jump animation: move up then down\n      setPosition(prevPosition => {\n        const newY = prevPosition[1] + delta * 10\n        // Check if the model has reached the peak of the jump\n        if (newY >= 2) {\n          setIsJumping(false) // Start falling\n        }\n        return [prevPosition[0], newY <= 0 ? 0 : newY, prevPosition[2]] // Reset Y position after jump\n      })\n    } else {\n      // Bring the model back down if it's in the air\n      setPosition(prevPosition => [prevPosition[0], Math.max(0, prevPosition[1] - delta * 10), prevPosition[2]])\n    }\n  })\n\n  useLayoutEffect(() => {\n    if (props.meshScale) {\n      if (nodes.canary) {\n        nodes.canary.scale.set(4, 4, 4)\n      }\n    }\n\n    scene.traverse(obj => {\n      obj.type === 'Mesh' && (obj.receiveShadow = obj.castShadow = true)\n    })\n\n    Object.assign(materials[props.model.material], {\n      wireframe: false,\n      metalness: props.model.metalness,\n      roughness: props.model.moughness,\n      opacity: props.model.opacity,\n      color: new THREE.Color(brandPalette[props.model.color])\n    })\n  }, [scene, nodes, materials])\n\n  return (\n    <mesh position={position}>\n      <primitive ref={ref} object={scene} {...props} />\n    </mesh>\n  )\n})\n\nexport { Canary }\n","/* eslint-disable react/no-unknown-property */\n/* eslint-disable react/prop-types */\nimport { useHelper } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useRef } from 'react'\nimport * as THREE from 'three'\nimport { brandPalette } from '../config'\n\nconst Lights = ({ config }) => {\n  const groupL = useRef()\n  const groupR = useRef()\n  const front = useRef()\n  const lightL = useRef()\n  const lightR = useRef()\n  const lightF = useRef()\n\n  useFrame(state => {\n    const t = state.clock.getElapsedTime()\n\n    // storm effect\n    let currentPosition = 15\n    if (parseInt(t) % 4 === 1) {\n      currentPosition = (Math.random() * 15) | 0\n    }\n\n    groupL.current.position.x = (Math.sin(t) / 4) * currentPosition\n    groupL.current.position.y = (Math.cos(t) / 4) * currentPosition\n    groupL.current.position.z = (Math.cos(t) / 4) * currentPosition\n\n    groupR.current.position.x = (Math.cos(t) / 4) * 10\n    groupR.current.position.y = (Math.sin(t) / 4) * 10\n    groupR.current.position.z = (Math.sin(t) / 4) * 10\n\n    front.current.position.x = (Math.sin(t) / 4) * 10\n    front.current.position.y = (Math.cos(t) / 4) * 10\n    front.current.position.z = (Math.sin(t) / 4) * 10\n  })\n\n  if (config.debug === true) {\n    useHelper(lightL, THREE.PointLightHelper)\n    useHelper(lightR, THREE.PointLightHelper)\n    useHelper(lightF, THREE.PointLightHelper)\n  }\n\n  return (\n    <>\n      <group ref={groupL}>\n        <pointLight\n          ref={lightL}\n          color={brandPalette[config.pointLight.color[0]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[0]}\n        />\n      </group>\n      <group ref={groupR}>\n        <pointLight\n          ref={lightR}\n          color={brandPalette[config.pointLight.color[1]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[1]}\n        />\n      </group>\n      <group ref={front}>\n        <pointLight\n          ref={lightF}\n          color={brandPalette[config.pointLight.color[2]]}\n          position={config.pointLight.position}\n          distance={config.pointLight.distance}\n          intensity={config.pointLight.intensity[2]}\n        />\n      </group>\n    </>\n  )\n}\n\nexport { Lights }\n","import { useLoader, useFrame } from '@react-three/fiber'\nimport React, { useState, useRef } from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three'\n\nconst random = (min, max) => Math.floor(Math.random() * (max - min)) + min\n\nconst ObstacleSegment = React.forwardRef(({ positionZ, side }, ref) => {\n  const texture = useLoader(TextureLoader, `${process.env.PUBLIC_URL}/assets/sbf.jpeg`)\n\n  return (\n    <mesh position={[side, 0, positionZ]} rotation={[0, 0, 0]} ref={ref}>\n      <planeGeometry args={[1.2, 1.2]} />\n      <meshBasicMaterial map={texture} side={THREE.DoubleSide} />\n    </mesh>\n  )\n})\n\nconst Obstacle = React.forwardRef((_, playerRef) => {\n  const [obstacles, setObstacles] = useState([])\n  const [gamePosition, setGamePosition] = useState(0)\n\n  const visibleObstacles = 5\n  const lastSegmentRef = useRef()\n  const clockRef = useRef({ elapsedTime: 0, delta: 0 })\n\n  useFrame(state => {\n    const { clock } = state\n    clockRef.current.delta = clock.getElapsedTime() - clockRef.current.elapsedTime\n\n    if (playerRef.current) {\n      if (clockRef.current.delta >= 0.05) {\n        clockRef.current.elapsedTime = clock.getElapsedTime()\n        setGamePosition(gamePosition => gamePosition + 1)\n        setObstacles(prevObstacles => prevObstacles.map(segment => ({ z: segment.z - 1, side: segment.side })))\n      }\n\n      const lastSegmentZ = lastSegmentRef.current ? lastSegmentRef.current.position.z : 0\n\n      if (obstacles.length < visibleObstacles || gamePosition % visibleObstacles > lastSegmentZ) {\n        const segmentGap = random(10, 50)\n        const Obstacleside = Math.floor(Math.random() * 3) - 1\n        const newSegmentZ = { z: lastSegmentZ + segmentGap, side: Obstacleside }\n        setObstacles(prevObstacles => [...prevObstacles, newSegmentZ])\n      }\n\n      if (obstacles.length > visibleObstacles) {\n        setObstacles(prevObstacles => prevObstacles.slice(1))\n      }\n    }\n  })\n\n  return (\n    <>\n      {obstacles.map(({ z, side }, index) => (\n        <ObstacleSegment\n          key={index}\n          positionZ={z}\n          side={side}\n          ref={index === obstacles.length - 1 ? lastSegmentRef : undefined}\n        />\n      ))}\n    </>\n  )\n})\n\nexport { Obstacle }\n","import { useFrame } from '@react-three/fiber'\nimport React, { useState, useRef } from 'react'\nimport * as THREE from 'three'\n\nconst PathSegment = React.forwardRef(({ positionZ }, ref) => {\n  return (\n    <mesh position={[0, -0.52, positionZ]} rotation={[Math.PI / 2, 0, 0]} ref={ref}>\n      <planeGeometry args={[0.1, 5]} />\n      <meshBasicMaterial color={0xffffff} side={THREE.DoubleSide} />\n    </mesh>\n  )\n})\n\nconst Path = React.forwardRef((_, playerRef) => {\n  const [segments, setSegments] = useState([])\n  const [gamePosition, setGamePosition] = useState(0)\n\n  const visibleSegments = 5\n  const lastSegmentRef = useRef()\n  const clockRef = useRef({ elapsedTime: 0, delta: 0 })\n\n  useFrame(state => {\n    const { clock } = state\n    clockRef.current.delta = clock.getElapsedTime() - clockRef.current.elapsedTime\n\n    if (playerRef.current) {\n      if (clockRef.current.delta >= 0.05) {\n        clockRef.current.elapsedTime = clock.getElapsedTime()\n        setGamePosition(gamePosition => gamePosition + 1)\n        setSegments(prevSegments => prevSegments.map(segment => segment - 1))\n      }\n\n      const lastSegmentZ = lastSegmentRef.current ? lastSegmentRef.current.position.z : 0\n\n      // Generate new segments if needed\n      if (segments.length < visibleSegments || gamePosition % visibleSegments > lastSegmentZ) {\n        const segmentGap = 20\n        const newSegmentZ = lastSegmentZ + segmentGap\n        setSegments(prevSegments => [...prevSegments, newSegmentZ])\n      }\n\n      // Remove segments that are far behind the player\n      if (segments.length > visibleSegments) {\n        setSegments(prevSegments => prevSegments.slice(1))\n      }\n    }\n  })\n\n  return (\n    <>\n      {segments.map((z, index) => (\n        <PathSegment key={index} positionZ={z} ref={index === segments.length - 1 ? lastSegmentRef : undefined} />\n      ))}\n    </>\n  )\n})\n\nexport { Path }\n","import { OrbitControls } from '@react-three/drei'\nimport { Canvas } from '@react-three/fiber'\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport React, { useRef, Suspense } from 'react'\nimport { CameraController } from '../components/CameraController'\nimport { Canary } from '../components/Canary'\nimport { Lights } from '../components/Lights'\nimport { Obstacle } from '../components/Obstacle'\nimport { Path } from '../components/Path'\nimport { canaryConfig as config } from '../config'\n\nconst Game = () => {\n  const playerRef = useRef()\n\n  return (\n    <Canvas shadows dpr={[1, 2]} camera={{ position: config.cameraPosition, fov: 50 }} performance={{ min: 0.1 }}>\n      <CameraController />\n\n      <Lights config={config} />\n\n      <Path ref={playerRef} />\n\n      <Obstacle ref={playerRef} />\n\n      <Suspense fallback={null}>\n        <Canary\n          animation=\"walk\"\n          speed=\"3\"\n          scale={config.model.scale}\n          meshColorIndex={config.meshColorIndex}\n          meshScale={config.meshScale}\n          model={config.model}\n          ref={playerRef}\n        />\n\n        <EffectComposer multisampling={16}>\n          <Bloom\n            kernelSize={config.bloom.kernelSize}\n            luminanceThreshold={config.bloom.luminanceThreshold}\n            luminanceSmoothing={config.bloom.luminanceSmoothing}\n            intensity={config.bloom.intensity}\n          />\n        </EffectComposer>\n      </Suspense>\n\n      <OrbitControls minPolarAngle={Math.PI / 2.8} maxPolarAngle={Math.PI / 1.8} />\n    </Canvas>\n  )\n}\n\nexport { Game }\n","import { OrbitControls } from '@react-three/drei'\nimport { Canvas } from '@react-three/fiber'\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport React, { useState, useEffect, useRef, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport styled, { keyframes } from 'styled-components'\nimport { Game } from './Game'\nimport { Canary } from '../components/Canary'\nimport { Lights } from '../components/Lights'\nimport { canaryConfig as config } from '../config'\n\nconst StartScreen = () => {\n  const [showStartScreen, setShowStartScreen] = useState(true)\n\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        setShowStartScreen(false)\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyPress)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress)\n    }\n  }, [])\n\n  const playerRef = useRef()\n\n  return showStartScreen ? (\n    <>\n      <Canvas shadows dpr={[1, 2]} camera={{ position: [3, 1, 3], fov: 50 }} performance={{ min: 0.1 }}>\n        <Lights config={config} />\n\n        <Suspense fallback={null}>\n          <Canary\n            animation=\"idle\"\n            speed=\"1\"\n            position={[0, 0.2, 0]}\n            scale={config.model.scale}\n            meshColorIndex={config.meshColorIndex}\n            meshScale={config.meshScale}\n            model={config.model}\n            ref={playerRef}\n          />\n\n          <EffectComposer multisampling={16}>\n            <Bloom\n              kernelSize={config.bloom.kernelSize}\n              luminanceThreshold={config.bloom.luminanceThreshold}\n              luminanceSmoothing={config.bloom.luminanceSmoothing}\n              intensity={config.bloom.intensity}\n            />\n          </EffectComposer>\n        </Suspense>\n\n        <OrbitControls minPolarAngle={Math.PI / 2.8} maxPolarAngle={Math.PI / 1.8} />\n      </Canvas>\n      {ReactDOM.createPortal(\n        <OverlayContainer>\n          <Title>canary in a meme mine</Title>\n          <Subtitle>press enter to start</Subtitle>\n        </OverlayContainer>,\n        document.body\n      )}\n    </>\n  ) : (\n    <Game />\n  )\n}\n\nconst blinkAnimation = keyframes`\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n`\n\nconst OverlayContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n`\n\nconst Title = styled.h1`\n  color: #fff;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n`\n\nconst Subtitle = styled.h2`\n  color: #fff;\n  margin-top: 100px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  animation: ${blinkAnimation} 1500ms linear infinite;\n`\n\nexport { StartScreen }\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { StartScreen } from './lib/StartScreen'\n\nimport './styles.css'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className={'App'}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: '100%'\n          }}\n        >\n          <StartScreen />\n        </div>\n      </>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root')\nconst root = createRoot(rootElement)\nroot.render(<App />)\n"],"sourceRoot":""}